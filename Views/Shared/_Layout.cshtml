@using Microsoft.AspNetCore.Http

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - netcore_postgres_oauth_boiler</title>
    <link rel="stylesheet" href="~/lib/materialize/css/materialize.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        <nav class="light-blue">
            <div class="nav-wrapper">
                <a style="padding-left:1vw;" asp-area="" asp-controller="Home" asp-action="Index" class="brand-logo">boiler</a>
                <ul id="nav-mobile" class="right hide-on-med-and-down">
                    <li><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
                    @if (Context.Session.GetString("user") == null)
                    {
                        <li><a asp-area="" asp-controller="Auth" asp-action="Login">Login</a></li>
                        <li><a asp-area="" asp-controller="Auth" asp-action="Register">Register</a></li>
                    }
                    else
                    {
                        <li><a asp-area="" asp-controller="Profile" asp-action="Index">Profile</a></li>
                        <li style="font-weight:bold;"><a asp-area="" asp-controller="Session" asp-action="Logout">Logout</a></li>
                    }
                </ul>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main">
            @RenderBody()
        </main>
    </div>
    <footer class="light-blue page-footer footer">
        <div class="footer-copyright">
            <div class="container">
                2020, netcore-postgres-oauth-boiler
            </div>
        </div>
    </footer>
    <script src="~/lib/materialize/js/materialize.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>

<script type="text/javascript">
    // Info box display

    // TempData persists through redirects
    // Use ViewData for passing regular data, such as in the HomeController -> Index example
    document.addEventListener('DOMContentLoaded', () => {
        if ('@TempData["info"]' != null && '@TempData["info"]' != "") {
            M.toast({ html: '@TempData["info"]' });
        }

        if ('@TempData["error"]' != null && '@TempData["error"]' != "") {
            M.toast({ html: '@TempData["error"]', classes: "red" });
        }
    });
</script>
